{
  "name": "Start filter",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "start-filter",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -420,
        -40
      ],
      "id": "6d41cb7b-d01f-4a7f-9927-72a584f42afb",
      "name": "Webhook",
      "webhookId": "f9e433ff-45e8-4100-af7e-edfda1fd84b8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "91266cf5-ac91-40f7-b7b5-b80a0c496972",
              "name": "chatInput",
              "value": "={{ $json.query.chatInput }}",
              "type": "string"
            },
            {
              "id": "3ae3c945-a080-461a-a44f-8cae5e420c9e",
              "name": "sessionId",
              "value": "={{ $json.query.sessionId}}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        0,
        -40
      ],
      "id": "471c1058-ee16-4b1d-9dae-4f041fa2c10f",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1360,
        -60
      ],
      "id": "5b63de32-4be7-4caf-97d2-99e39b0b813a",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "model": "llama3.2:latest",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        100,
        240
      ],
      "id": "8999c353-35f5-4a5a-ab21-8a76c3bf4eed",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "eyEBAqW1xH6h7KLn",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Here is the user request: {{ $json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are an AI assistant specialized in finding grants and subsidies for companies. Your task is to determine if you have the following required information:\n\n1. **Type of Company** includes the following options:\n   + **Company Size**:\n     - Large Company  \n     - Midcap  \n     - SME  \n     - Microenterprise  \n     - Self-Employed  \n\n   + **Organization Type**:\n     - NGO  \n     - Technology Centers  \n     - Universities  \n     - Research Centers  \n     - Others  \n\n   + **Particulars**  \n\n2. **Location of the Company** includes the following options:\n   - Europe  \n   - Spain  \n   - United States  \n   - Other  \n\n3. Company Identifier:\nIf the type of company or location is missing, you should determine if the user's input or chat history contains one of the following:\n\n- Company Name (e.g., Google)\n- Website Domain (e.g., google.com)\n- CIF (Tax Identification Number)\n \n### ACTION  \nYou need to:  \n1. **Analyze the user's current input and previous messages in the chat history** to check if the required information (type of company, location, name, domain or CIF) is already present.  \n2. If **type of company or location is missing** but a company identifier is found (name, domain, or CIF), use the **tool **get_company_details to retrieve the missing information.\n2. **Access the system memory** to retrieve any previously stored data. \n\n### RESPONSE  \nReturn ONLY a JSON RESPONSE.  \n\n- If you find **type of company and location**, return:\n  ```json\n  {\n    \"valid\": true,\n    \"type_company\": \"SME\",\n    \"scope\": \"Europe\"\n  }\n\n\n- If you **cannot find one or both details**, return a JSON response indicating the missing information:\n  {\n    \"valid\": false,\n    \"type_company\": null,\n    \"scope\": null\n  }\n\n### IMPORTANT  \nEnsure your output is **always in JSON format**. Do not include explanations, comments, or extra text.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        200,
        -40
      ],
      "id": "df414414-82f9-4d14-a9e5-664150f3d879",
      "name": "Filter"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import json\nimport re\n\n# output = json.loads(_input.first().json[\"output\"])\noutput = str(_input.first().json[\"output\"])\npattern = r'\\{\\s*\"valid\":\\s*.*?,\\s*\"type_company\":\\s*.*?,\\s*\"scope\":\\s*.*?\\s*\\}'\n\n\nmatch = re.search(pattern, output)\n\nif match:\n  json_data = json.loads(match.group())  # Convertir a diccionario\n  if \"valid\" in json_data and \"type_company\" in json_data and \"scope\" in json_data:\n    valid = str(json_data[\"valid\"])\n    type_company = str(json_data[\"type_company\"])\n    scope = str(json_data[\"scope\"])\nelse:\n  print(\"No se encontrÃ³ un JSON vÃ¡lido en la respuesta.\")\n  valid = \"\"\n  type_company = \"\"\n  scope = \"\"\n\nmissing = \"\"\n\nif type_company == \"None\":\n  type_company = \"\"\nif scope == \"None\":\n  scope = \"\"\n\n\nif type_company is \"\" or scope is \"\":\n  return {\n    \"error\" : \"500\",\n    \"type_company\" : \"\",\n    \"scope\" : \"\"\n  }\n\nreturn {\n  \"error\" : missing,\n  \"type_company\" :  type_company,\n  \"scope\" : scope\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        -40
      ],
      "id": "fe0b3238-605d-4ae5-8e73-675e4d76ee26",
      "name": "Code"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "295c263e-3431-46a4-9de7-fa66975efdf7",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "6d1831d3-a4ba-48cd-a4c8-0f5461885733",
              "leftValue": "={{ $json.error }}",
              "rightValue": "500",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        700,
        -40
      ],
      "id": "40f37b02-00c6-4983-b44f-87e4ef6235e8",
      "name": "check error"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f6a6e3e-6528-43de-9f92-d0c551034de9",
              "name": "valid",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "cc7af3f9-45c7-4b2b-a931-5fab75f00033",
              "name": "message",
              "value": "Hello! ðŸ‘‹ I'm here to assist you in finding the most suitable grants and funding opportunities for your company.\n\nTo get started, I need some basic information about your company. This will help me provide accurate and relevant recommendations.\nCould you please provide the following information?\n- **Company Type**: Large Company, Midcap, SME, Microenterprise, Self-Employed, NGO, Technology Centers, Universities, Research Centers, Particular, Other.\n- **Location**: Europe, Spain, United States, Other.\n\nIf you don't know this information, I can search it for you. Please provide one of the following:\n- The name of your company (Ex: Google)\n- Your company's website domain (Ex: google.com)\n- Your CIF (Tax Identification Number)\n\nOnce we have this information, I can guide you through the available options or perform a detailed search for you. Letâ€™s get started! ðŸ˜Š",
              "type": "string"
            },
            {
              "id": "fce3701e-39a6-4d03-b7ff-3f3d8204367f",
              "name": "type_company",
              "value": "={{ $json.type_company }}",
              "type": "string"
            },
            {
              "id": "6ea3378d-0081-40e2-98ad-4f34ff18e4a1",
              "name": "scope",
              "value": "={{ $json.scope }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        -160
      ],
      "id": "e06e2e2e-f6c3-4184-b948-98750f8a5c5a",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "4f6a6e3e-6528-43de-9f92-d0c551034de9",
              "name": "valid",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "cc7af3f9-45c7-4b2b-a931-5fab75f00033",
              "name": "message",
              "value": "=Thank you for providing the details about your company. I now have your company type as '{{ $json.type_company }}' and your location as '{{ $json.scope }}'. ",
              "type": "string"
            },
            {
              "id": "fce3701e-39a6-4d03-b7ff-3f3d8204367f",
              "name": "type_company",
              "value": "={{ $json.type_company }}",
              "type": "string"
            },
            {
              "id": "6ea3378d-0081-40e2-98ad-4f34ff18e4a1",
              "name": "scope",
              "value": "={{ $json.scope }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        980,
        40
      ],
      "id": "602d51e7-b632-46ea-8e61-4be8213c9a71",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "name": "get_company_details",
        "description": "Retrieve a company's type and location by sending the company_name (e.g., \"Google\") or the company_url (e.g., \"google.com\").\n\nExample of the tool response:\n{\n\"name\": \"Google\",\n\"employees\": 51,\n\"country\": \"spain\",\n\"continent\": \"europe\",\n\"funding\": null,\n\"type_company\": \"Midcap\"\n}",
        "workflowId": {
          "__rl": true,
          "value": "FwAZeP4Berwnv4qz",
          "mode": "list",
          "cachedResultName": "Search details company"
        },
        "jsonSchemaExample": "{\n\t\"company_name\": \"some_value\",\n    \"companty_url\": \"some_value\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 1.3,
      "position": [
        460,
        240
      ],
      "id": "328ff984-7644-434f-8b85-3ef4e38b5fcb",
      "name": "Get company details"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        280,
        240
      ],
      "id": "4c816a54-56aa-4c2a-95b4-9bb584ad7733",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "sZqBM43fLd9wJOda",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Filter",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "check error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check error": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get company details": {
      "ai_tool": [
        [
          {
            "node": "Filter",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Filter",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "16b752b4-ee7f-4634-a274-8dca1943610a",
  "meta": {
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  },
  "id": "F7T6oMcDl8yZW7ln",
  "tags": [
    {
      "createdAt": "2024-12-04T13:49:48.129Z",
      "updatedAt": "2024-12-04T13:49:48.129Z",
      "id": "xxBU6l4CZLadHyeF",
      "name": "TFM"
    }
  ]
}